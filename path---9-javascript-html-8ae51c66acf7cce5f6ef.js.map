{"version":3,"sources":["webpack:///path---9-javascript-html-8ae51c66acf7cce5f6ef.js","webpack:///./.cache/json/9-javascript-html.json"],"names":["webpackJsonp","571","module","exports","data","site","siteMetadata","startDate","lessons","noClass","markdownRemark","html","frontmatter","lesson","title","lessonId","downloads","Download_Stater_File","file","publicURL","Homework_Files","allMarkdownRemark","edges","node","id","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,UAAA,aAAAC,QAAA,EAAAC,SAAA,KAAoDC,gBAAmBC,KAAA,s63BAAis5BC,aAAwWC,OAAA,aAAAC,MAAA,WAAAC,SAAA,EAAAC,WAAmEC,sBAAwBC,MAAQC,UAAA,uDAAkEC,eAAA,QAAyBC,mBAAsBC,QAAUC,MAAQC,GAAA,wFAAAZ,aAA4GE,MAAA,WAAAD,OAAA,SAAoCY,QAAWC,KAAA,oBAA2BH,MAAQC,GAAA,6FAAAZ,aAAiHE,MAAA,WAAAD,OAAA,cAAyCY,QAAWC,KAAA,2BAAiCC,aAAgBD,KAAA,qBAAAZ,MAAA","file":"path---9-javascript-html-8ae51c66acf7cce5f6ef.js","sourcesContent":["webpackJsonp([235056474888056],{\n\n/***/ 571:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"startDate\":\"2018-06-06\",\"lessons\":8,\"noClass\":[4]}},\"markdownRemark\":{\"html\":\"<h2>JavaScript Variable</h2>\\n<p>Variable declarations, wherever they occur, are processed before any code is executed. The scope of a variable declared with var is its current execution context, which is either the enclosing function or, for variables declared outside any function, global. If you re-declare a JavaScript variable, it will not lose its value.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> name <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// write out the value of Name to the console.</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Dan</span></code></pre>\\n      </div>\\n<p>A variable can be any of the data types listed below.</p>\\n<h2>JavaScript Data Types</h2>\\n<p>When we create a variable in JavaScript the values that are set are the data types.</p>\\n<p>The latest ECMAScript standard defines seven data types:</p>\\n<h2>Six data types that are primitives:</h2>\\n<ul>\\n<li>Boolean</li>\\n<li>Null</li>\\n<li>Undefined</li>\\n<li>Number</li>\\n<li>String</li>\\n<li>Symbol (new in ECMAScript 6)</li>\\n</ul>\\n<p>All types except objects define immutable values (values, which are incapable of being changed). For example and unlike to C, Strings are immutable. We refer to values of these types as \\\"primitive values\\\".</p>\\n<h3>Boolean type</h3>\\n<p>Boolean represents a logical entity and can have two values: <code class=\\\"language-text\\\">true</code>, and <code class=\\\"language-text\\\">false</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> isHappy <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>isHappy<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// true</span>\\n\\nisHappy <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>isHappy<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// false</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isHappy <span class=\\\"token operator\\\">===</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"üòô\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  conosle<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"‚òπÔ∏è\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token comment\\\">// ‚òπÔ∏è since `isHappy` is false</span></code></pre>\\n      </div>\\n<h3>Null type</h3>\\n<p>The Null type has exactly one value: <code class=\\\"language-text\\\">null</code>. In computer science, a null value represents a reference that points, generally intentionally, to a nonexistent or invalid object or address. In other words no value. <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null\\\" target=\\\"_blank\\\">Read More</a></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> notSet <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>notSet<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// null</span></code></pre>\\n      </div>\\n<h3>Undefined type</h3>\\n<p>A variable that has not been assigned a value has the value <code class=\\\"language-text\\\">undefined</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> x<span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined</span></code></pre>\\n      </div>\\n<h3>Number type</h3>\\n<p>a number is able to represent floating-point numbers, the number type has three symbolic values: +Infinity, -Infinity, and <code class=\\\"language-text\\\">NaN</code> (not-a-number).</p>\\n<p>With numbers you can do math on them <code class=\\\"language-text\\\">+</code> add, <code class=\\\"language-text\\\">-</code> subtract, <code class=\\\"language-text\\\">*</code> multiply and <code class=\\\"language-text\\\">/</code> divide.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\">console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 6</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">4</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 2</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token comment\\\">// 9</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">12</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 3</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Infinity</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"3a\\\"</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// NaN</span></code></pre>\\n      </div>\\n<h3>String type</h3>\\n<p>JavaScript's String type is used to represent textual data. It is a set of \\\"elements\\\" of 16-bit unsigned integer values. Each element in the String occupies a position in the String. The first element is at index 0, the next at index 1, and so on. The length of a String is the number of elements in it.</p>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\\\" target=\\\"_blank\\\">Learn More</a></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> name <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Dan Hahn\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"Dan Hahn\\\"</span>\\n\\n<span class=\\\"token keyword\\\">var</span> firstName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> lastName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Hahn\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> fullName <span class=\\\"token operator\\\">=</span> firstName <span class=\\\"token operator\\\">+</span> lastName<span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fullName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"DanHahn\\\"</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>firstName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>lastName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"Dan Hahn\\\"</span></code></pre>\\n      </div>\\n<h2>JavaScript Array</h2>\\n<p>The JavaScript Array object is a global object that is used in the construction of arrays; which are high-level, list-like objects.</p>\\n<p>In other words an array is a list of strings, numbers, boolans, object or arrays. They can be acceed by their index with is a zero base index meaning it starts counting at <code class=\\\"language-text\\\">0</code>.</p>\\n<p>There are number of build in tools(methods) that can help get information about the array.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> fruits <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"Apple\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Banana\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fruits<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 2</span>\\n\\n<span class=\\\"token comment\\\">// get the first item in the array</span>\\n<span class=\\\"token keyword\\\">var</span> first <span class=\\\"token operator\\\">=</span> fruits<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Apple</span>\\n\\n<span class=\\\"token comment\\\">// get the last item in the array</span>\\n<span class=\\\"token keyword\\\">var</span> last <span class=\\\"token operator\\\">=</span> fruits<span class=\\\"token punctuation\\\">[</span>fruits<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Banana</span>\\n\\n<span class=\\\"token comment\\\">// add an item to the array</span>\\nfruits<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Grape\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fruits<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 3</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fruits<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ['Apple', 'Banana', 'Grape'];</span></code></pre>\\n      </div>\\n<h2>JavaScript Object</h2>\\n<p>An object is a collection of related data and/or functionality (which usually consists of several variables and functions ‚Äî which are called properties and methods when they are inside objects.)</p>\\n<p>Unlike an array does not have a \\\"order\\\" you will need to get the value from a <code class=\\\"language-text\\\">key</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// create a object</span>\\n<span class=\\\"token keyword\\\">var</span> person <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// {}</span>\\n\\n<span class=\\\"token comment\\\">//Let create the same object again but this time with some data in it.</span>\\n\\n<span class=\\\"token keyword\\\">var</span> person <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  firstName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  lastName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Hahn\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"dan@svahtml.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  interests<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"html\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"css\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"javascript\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  isCool<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  age<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">22</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// {</span>\\n<span class=\\\"token comment\\\">//   firstName: 'Dan',</span>\\n<span class=\\\"token comment\\\">//   lastName: 'Hahn',</span>\\n<span class=\\\"token comment\\\">//   email: 'dan@svahtml.com',</span>\\n<span class=\\\"token comment\\\">//   interests: [ 'html', 'css', 'javascript' ],</span>\\n<span class=\\\"token comment\\\">//   isCool: false,</span>\\n<span class=\\\"token comment\\\">//   age: 22</span>\\n<span class=\\\"token comment\\\">// }</span>\\n\\n<span class=\\\"token comment\\\">// access a value on the object.</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"firstName\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"Dan\\\"</span>\\n<span class=\\\"token comment\\\">// or</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">.</span>age<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 22</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"dan@svahtml.com\\\"</span>\\n\\n<span class=\\\"token comment\\\">// change a value on an object.</span>\\nperson<span class=\\\"token punctuation\\\">.</span>isCool <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// {</span>\\n<span class=\\\"token comment\\\">//   firstName: 'Dan',</span>\\n<span class=\\\"token comment\\\">//   lastName: 'Hahn',</span>\\n<span class=\\\"token comment\\\">//   email: 'dan@svahtml.com',</span>\\n<span class=\\\"token comment\\\">//   interests: [ 'html', 'css', 'javascript' ],</span>\\n<span class=\\\"token comment\\\">//   isCool: true,</span>\\n<span class=\\\"token comment\\\">//   age: 22</span>\\n<span class=\\\"token comment\\\">// }</span>\\n\\n<span class=\\\"token comment\\\">// add key to the object</span>\\nperson<span class=\\\"token punctuation\\\">.</span>city <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"New York\\\"</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// {</span>\\n<span class=\\\"token comment\\\">//   firstName: 'Dan',</span>\\n<span class=\\\"token comment\\\">//   lastName: 'Hahn',</span>\\n<span class=\\\"token comment\\\">//   email: 'dan@svahtml.com',</span>\\n<span class=\\\"token comment\\\">//   interests: [ 'html', 'css', 'javascript' ],</span>\\n<span class=\\\"token comment\\\">//   isCool: false,</span>\\n<span class=\\\"token comment\\\">//   age: 22,</span>\\n<span class=\\\"token comment\\\">//   city: 'New York'</span>\\n<span class=\\\"token comment\\\">// }</span></code></pre>\\n      </div>\\n<h2>JavaScript function</h2>\\n<p>Functions are one of the fundamental building blocks in JavaScript. A function is a JavaScript procedure‚Äîa set of statements that performs a task or calculates a value. To use a function, you must define it somewhere in the scope from which you wish to call it.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// let build a function that will say hello to the console</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> greeting <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Hello World\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// the function will not fire until it is called;</span>\\n\\n<span class=\\\"token comment\\\">// lets call the function</span>\\n\\n<span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"Hello World!\\\"</span>\\n\\n<span class=\\\"token comment\\\">// Lets customize our function by tell the name to say hi to.</span>\\n<span class=\\\"token comment\\\">// We need to pass the name in to the function.</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span>displayName<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// displayName is passed in to the function and set</span>\\n  <span class=\\\"token comment\\\">// to a variable of `displayName`</span>\\n  <span class=\\\"token comment\\\">// it would look like this var displayName = \\\"Dan\\\";</span>\\n  <span class=\\\"token comment\\\">// We can now use this variable in our function just</span>\\n  <span class=\\\"token comment\\\">// like we could any other variable that may be defined.</span>\\n  <span class=\\\"token keyword\\\">var</span> greeting <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Hello </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>displayName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">!`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"Hello Dan!\\\"</span>\\n\\n<span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Larry\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"Hello Larry!\\\"</span></code></pre>\\n      </div>\\n<p>We can do many things with our function. One way to keep the code clean is to break the function up in to smaller parts. This is called functional programing. The idea is that each function will only do one thing. We need to introduce a new idea <code class=\\\"language-text\\\">return</code>. A <code class=\\\"language-text\\\">return</code> will return a calculated value from another function.</p>\\n<p>Lets build a function that will calculate a dogs age (age times 7) and display its bark.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// this will calculate the dogs age</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">calcDogAge</span><span class=\\\"token punctuation\\\">(</span>age<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> age <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// return the age times 7;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dogGreeting</span><span class=\\\"token punctuation\\\">(</span>dogName<span class=\\\"token punctuation\\\">,</span> age<span class=\\\"token punctuation\\\">,</span> greeting<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// get the age of the dog.</span>\\n  <span class=\\\"token keyword\\\">var</span> dogAge <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">calcDogAge</span><span class=\\\"token punctuation\\\">(</span>age<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// use a build in string function to repeat the greeting two time.</span>\\n  <span class=\\\"token keyword\\\">var</span> dogGreeting <span class=\\\"token operator\\\">=</span> greeting<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">repeat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// build the string to be return using a string template.</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>dogGreeting<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>dogName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>dogAge<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> years old.`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// return the full string.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">dogGreeting</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Snickers\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Woof\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"WoofWoof Snickers is 21 years old.\\\"</span>\\n\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">dogGreeting</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Puddles\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Bark\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// alert box this time.</span>\\n<span class=\\\"token comment\\\">// \\\"BarkBark Puddles is 7 years old.\\\"</span></code></pre>\\n      </div>\\n<p>Here the function does not display the string but return the full string and the thing that is calling the function is responable for how to display the string.</p>\",\"frontmatter\":{\"lesson\":\"Javascript\",\"title\":\"Lesson 9\",\"lessonId\":9,\"downloads\":{\"Download_Stater_File\":{\"file\":{\"publicURL\":\"/static/week9-8a1b396bef8a2751c3d9fce9b5353d9a.zip\"}},\"Homework_Files\":null}}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"id\":\"/Users/dhahn/dev/html-class-g/src/pages/9/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Lesson 9\",\"lesson\":\"Forms\"},\"fields\":{\"slug\":\"/9/index.html\"}}},{\"node\":{\"id\":\"/Users/dhahn/dev/html-class-g/src/pages/9/javascript.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Lesson 9\",\"lesson\":\"Javascript\"},\"fields\":{\"slug\":\"/9/javascript.html\"}}}]}},\"pathContext\":{\"slug\":\"/9/javascript.html\",\"title\":\"Lesson 9\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---9-javascript-html-8ae51c66acf7cce5f6ef.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"startDate\":\"2018-06-06\",\"lessons\":8,\"noClass\":[4]}},\"markdownRemark\":{\"html\":\"<h2>JavaScript Variable</h2>\\n<p>Variable declarations, wherever they occur, are processed before any code is executed. The scope of a variable declared with var is its current execution context, which is either the enclosing function or, for variables declared outside any function, global. If you re-declare a JavaScript variable, it will not lose its value.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> name <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// write out the value of Name to the console.</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Dan</span></code></pre>\\n      </div>\\n<p>A variable can be any of the data types listed below.</p>\\n<h2>JavaScript Data Types</h2>\\n<p>When we create a variable in JavaScript the values that are set are the data types.</p>\\n<p>The latest ECMAScript standard defines seven data types:</p>\\n<h2>Six data types that are primitives:</h2>\\n<ul>\\n<li>Boolean</li>\\n<li>Null</li>\\n<li>Undefined</li>\\n<li>Number</li>\\n<li>String</li>\\n<li>Symbol (new in ECMAScript 6)</li>\\n</ul>\\n<p>All types except objects define immutable values (values, which are incapable of being changed). For example and unlike to C, Strings are immutable. We refer to values of these types as \\\"primitive values\\\".</p>\\n<h3>Boolean type</h3>\\n<p>Boolean represents a logical entity and can have two values: <code class=\\\"language-text\\\">true</code>, and <code class=\\\"language-text\\\">false</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> isHappy <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>isHappy<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// true</span>\\n\\nisHappy <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>isHappy<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// false</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isHappy <span class=\\\"token operator\\\">===</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"üòô\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  conosle<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"‚òπÔ∏è\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token comment\\\">// ‚òπÔ∏è since `isHappy` is false</span></code></pre>\\n      </div>\\n<h3>Null type</h3>\\n<p>The Null type has exactly one value: <code class=\\\"language-text\\\">null</code>. In computer science, a null value represents a reference that points, generally intentionally, to a nonexistent or invalid object or address. In other words no value. <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null\\\" target=\\\"_blank\\\">Read More</a></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> notSet <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>notSet<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// null</span></code></pre>\\n      </div>\\n<h3>Undefined type</h3>\\n<p>A variable that has not been assigned a value has the value <code class=\\\"language-text\\\">undefined</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> x<span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// undefined</span></code></pre>\\n      </div>\\n<h3>Number type</h3>\\n<p>a number is able to represent floating-point numbers, the number type has three symbolic values: +Infinity, -Infinity, and <code class=\\\"language-text\\\">NaN</code> (not-a-number).</p>\\n<p>With numbers you can do math on them <code class=\\\"language-text\\\">+</code> add, <code class=\\\"language-text\\\">-</code> subtract, <code class=\\\"language-text\\\">*</code> multiply and <code class=\\\"language-text\\\">/</code> divide.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\">console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 6</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">4</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 2</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token comment\\\">// 9</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">12</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 3</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Infinity</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"3a\\\"</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token string\\\">\\\"a\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// NaN</span></code></pre>\\n      </div>\\n<h3>String type</h3>\\n<p>JavaScript's String type is used to represent textual data. It is a set of \\\"elements\\\" of 16-bit unsigned integer values. Each element in the String occupies a position in the String. The first element is at index 0, the next at index 1, and so on. The length of a String is the number of elements in it.</p>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\\\" target=\\\"_blank\\\">Learn More</a></p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> name <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Dan Hahn\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"Dan Hahn\\\"</span>\\n\\n<span class=\\\"token keyword\\\">var</span> firstName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> lastName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Hahn\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> fullName <span class=\\\"token operator\\\">=</span> firstName <span class=\\\"token operator\\\">+</span> lastName<span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fullName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"DanHahn\\\"</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>firstName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>lastName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"Dan Hahn\\\"</span></code></pre>\\n      </div>\\n<h2>JavaScript Array</h2>\\n<p>The JavaScript Array object is a global object that is used in the construction of arrays; which are high-level, list-like objects.</p>\\n<p>In other words an array is a list of strings, numbers, boolans, object or arrays. They can be acceed by their index with is a zero base index meaning it starts counting at <code class=\\\"language-text\\\">0</code>.</p>\\n<p>There are number of build in tools(methods) that can help get information about the array.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">var</span> fruits <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"Apple\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Banana\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fruits<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 2</span>\\n\\n<span class=\\\"token comment\\\">// get the first item in the array</span>\\n<span class=\\\"token keyword\\\">var</span> first <span class=\\\"token operator\\\">=</span> fruits<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Apple</span>\\n\\n<span class=\\\"token comment\\\">// get the last item in the array</span>\\n<span class=\\\"token keyword\\\">var</span> last <span class=\\\"token operator\\\">=</span> fruits<span class=\\\"token punctuation\\\">[</span>fruits<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Banana</span>\\n\\n<span class=\\\"token comment\\\">// add an item to the array</span>\\nfruits<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Grape\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fruits<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 3</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fruits<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ['Apple', 'Banana', 'Grape'];</span></code></pre>\\n      </div>\\n<h2>JavaScript Object</h2>\\n<p>An object is a collection of related data and/or functionality (which usually consists of several variables and functions ‚Äî which are called properties and methods when they are inside objects.)</p>\\n<p>Unlike an array does not have a \\\"order\\\" you will need to get the value from a <code class=\\\"language-text\\\">key</code>.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// create a object</span>\\n<span class=\\\"token keyword\\\">var</span> person <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// {}</span>\\n\\n<span class=\\\"token comment\\\">//Let create the same object again but this time with some data in it.</span>\\n\\n<span class=\\\"token keyword\\\">var</span> person <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  firstName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  lastName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Hahn\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"dan@svahtml.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  interests<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"html\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"css\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"javascript\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  isCool<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  age<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">22</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// {</span>\\n<span class=\\\"token comment\\\">//   firstName: 'Dan',</span>\\n<span class=\\\"token comment\\\">//   lastName: 'Hahn',</span>\\n<span class=\\\"token comment\\\">//   email: 'dan@svahtml.com',</span>\\n<span class=\\\"token comment\\\">//   interests: [ 'html', 'css', 'javascript' ],</span>\\n<span class=\\\"token comment\\\">//   isCool: false,</span>\\n<span class=\\\"token comment\\\">//   age: 22</span>\\n<span class=\\\"token comment\\\">// }</span>\\n\\n<span class=\\\"token comment\\\">// access a value on the object.</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"firstName\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"Dan\\\"</span>\\n<span class=\\\"token comment\\\">// or</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">.</span>age<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 22</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// \\\"dan@svahtml.com\\\"</span>\\n\\n<span class=\\\"token comment\\\">// change a value on an object.</span>\\nperson<span class=\\\"token punctuation\\\">.</span>isCool <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// {</span>\\n<span class=\\\"token comment\\\">//   firstName: 'Dan',</span>\\n<span class=\\\"token comment\\\">//   lastName: 'Hahn',</span>\\n<span class=\\\"token comment\\\">//   email: 'dan@svahtml.com',</span>\\n<span class=\\\"token comment\\\">//   interests: [ 'html', 'css', 'javascript' ],</span>\\n<span class=\\\"token comment\\\">//   isCool: true,</span>\\n<span class=\\\"token comment\\\">//   age: 22</span>\\n<span class=\\\"token comment\\\">// }</span>\\n\\n<span class=\\\"token comment\\\">// add key to the object</span>\\nperson<span class=\\\"token punctuation\\\">.</span>city <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"New York\\\"</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>person<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// {</span>\\n<span class=\\\"token comment\\\">//   firstName: 'Dan',</span>\\n<span class=\\\"token comment\\\">//   lastName: 'Hahn',</span>\\n<span class=\\\"token comment\\\">//   email: 'dan@svahtml.com',</span>\\n<span class=\\\"token comment\\\">//   interests: [ 'html', 'css', 'javascript' ],</span>\\n<span class=\\\"token comment\\\">//   isCool: false,</span>\\n<span class=\\\"token comment\\\">//   age: 22,</span>\\n<span class=\\\"token comment\\\">//   city: 'New York'</span>\\n<span class=\\\"token comment\\\">// }</span></code></pre>\\n      </div>\\n<h2>JavaScript function</h2>\\n<p>Functions are one of the fundamental building blocks in JavaScript. A function is a JavaScript procedure‚Äîa set of statements that performs a task or calculates a value. To use a function, you must define it somewhere in the scope from which you wish to call it.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// let build a function that will say hello to the console</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> greeting <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Hello World\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// the function will not fire until it is called;</span>\\n\\n<span class=\\\"token comment\\\">// lets call the function</span>\\n\\n<span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"Hello World!\\\"</span>\\n\\n<span class=\\\"token comment\\\">// Lets customize our function by tell the name to say hi to.</span>\\n<span class=\\\"token comment\\\">// We need to pass the name in to the function.</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span>displayName<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// displayName is passed in to the function and set</span>\\n  <span class=\\\"token comment\\\">// to a variable of `displayName`</span>\\n  <span class=\\\"token comment\\\">// it would look like this var displayName = \\\"Dan\\\";</span>\\n  <span class=\\\"token comment\\\">// We can now use this variable in our function just</span>\\n  <span class=\\\"token comment\\\">// like we could any other variable that may be defined.</span>\\n  <span class=\\\"token keyword\\\">var</span> greeting <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Hello </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>displayName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">!`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Dan\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"Hello Dan!\\\"</span>\\n\\n<span class=\\\"token function\\\">sayHi</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Larry\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"Hello Larry!\\\"</span></code></pre>\\n      </div>\\n<p>We can do many things with our function. One way to keep the code clean is to break the function up in to smaller parts. This is called functional programing. The idea is that each function will only do one thing. We need to introduce a new idea <code class=\\\"language-text\\\">return</code>. A <code class=\\\"language-text\\\">return</code> will return a calculated value from another function.</p>\\n<p>Lets build a function that will calculate a dogs age (age times 7) and display its bark.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// this will calculate the dogs age</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">calcDogAge</span><span class=\\\"token punctuation\\\">(</span>age<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> age <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// return the age times 7;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dogGreeting</span><span class=\\\"token punctuation\\\">(</span>dogName<span class=\\\"token punctuation\\\">,</span> age<span class=\\\"token punctuation\\\">,</span> greeting<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// get the age of the dog.</span>\\n  <span class=\\\"token keyword\\\">var</span> dogAge <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">calcDogAge</span><span class=\\\"token punctuation\\\">(</span>age<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// use a build in string function to repeat the greeting two time.</span>\\n  <span class=\\\"token keyword\\\">var</span> dogGreeting <span class=\\\"token operator\\\">=</span> greeting<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">repeat</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// build the string to be return using a string template.</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>dogGreeting<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>dogName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> is </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>dogAge<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> years old.`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// return the full string.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">dogGreeting</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Snickers\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Woof\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// \\\"WoofWoof Snickers is 21 years old.\\\"</span>\\n\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">dogGreeting</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Puddles\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Bark\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// alert box this time.</span>\\n<span class=\\\"token comment\\\">// \\\"BarkBark Puddles is 7 years old.\\\"</span></code></pre>\\n      </div>\\n<p>Here the function does not display the string but return the full string and the thing that is calling the function is responable for how to display the string.</p>\",\"frontmatter\":{\"lesson\":\"Javascript\",\"title\":\"Lesson 9\",\"lessonId\":9,\"downloads\":{\"Download_Stater_File\":{\"file\":{\"publicURL\":\"/static/week9-8a1b396bef8a2751c3d9fce9b5353d9a.zip\"}},\"Homework_Files\":null}}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"id\":\"/Users/dhahn/dev/html-class-g/src/pages/9/index.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Lesson 9\",\"lesson\":\"Forms\"},\"fields\":{\"slug\":\"/9/index.html\"}}},{\"node\":{\"id\":\"/Users/dhahn/dev/html-class-g/src/pages/9/javascript.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"title\":\"Lesson 9\",\"lesson\":\"Javascript\"},\"fields\":{\"slug\":\"/9/javascript.html\"}}}]}},\"pathContext\":{\"slug\":\"/9/javascript.html\",\"title\":\"Lesson 9\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/9-javascript-html.json\n// module id = 571\n// module chunks = 235056474888056"],"sourceRoot":""}