<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SVA HTML</title>
    <atom:link href="http://localhost:8080/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://localhost:8080</link>
    <description>Summer 2015</description>
    <pubDate>Wed, 03 Jun 2015 15:00:00 -0400</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Lesson 1</title>
      <link>http://localhost:8080/lessons/lesson-1/</link>
      <pubDate>Wed, 03 Jun 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-1/</guid>
      <author></author>
      <description>&lt;p&gt;Introduction to HTML, Web Browsers, Standards &lt;div&gt;&lt;span class=&quot;label label-default html&quot;&gt;&lt;i class=&quot;fa fa-html5&quot;&gt;&lt;/i&gt;HTML&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-1/&quot;&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-1/editors.html&quot;&gt;Editors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-1/template.html&quot;&gt;HTML Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-1/block-level.html&quot;&gt;Block-Level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-1/inline.html&quot;&gt;Inline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-1/classwork.html&quot;&gt;Classwork&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-1/homework.html&quot;&gt;Homework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;/lessons/lesson-1/week1-notes.zip&quot;&gt;Download Notes&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-is-html-&quot;&gt;What is HTML?&lt;/h2&gt;
&lt;p&gt;HTML or Hyper Text Markup Language is the building blocks of all web pages.  HTML uses tags to create element that are filled with content like text and images.  The elements are instructions to the web browser how to display the content on the screen.  &lt;/p&gt;
&lt;p&gt;Another way to think about it is HTML is a series of start and stop commands for the web browser.  The browser then renders that content to the specs of HTML.  &lt;/p&gt;
&lt;h2 id=&quot;the-three-buckets&quot;&gt;The Three Buckets&lt;/h2&gt;
&lt;p&gt;Modern web development uses the three bucket approach.  Each bucket adds another layer to the display of the page.&lt;/p&gt;
&lt;ul class=&quot;buckets&quot;&gt;
  &lt;li&gt;HTML&lt;/li&gt;
  &lt;li&gt;CSS&lt;/li&gt;
  &lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;HTML is the building blocks or scaffolding of the page.  &lt;/li&gt;
&lt;li&gt;CSS or Cascading Style Sheets is the presentation or the look and feel of the page.&lt;/li&gt;
&lt;li&gt;JavaScript is the action layer of the page.  We will not cover any JavaScript in this class.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;the-tag&quot;&gt;The Tag&lt;/h2&gt;
&lt;p&gt;There are over 80 different HTML tags that can be used.  They all have the same basic format.  Most tags have an opening and a closing tag.  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;tag&amp;gt;content&amp;lt;/tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;All tags have brackets around them &amp;lt; and &amp;gt; that are used by the browser to know what is a tag and what is content.  Right after the opening bracket &lt;code&gt;&amp;lt;&lt;/code&gt; is the tag name like h1 or p then the closing bracket &lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If the tag has a closing tag it will match the opening tag but have an &lt;code&gt;/&lt;/code&gt; after the opening bracket.  This is the indication to the browser to close the tag that was opened.  With out it the browser would never know when to stop.  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;/tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are a few number of tags that do not have a closing tag because they do not wrap any content.  Older versions of HTML required that all tags be opened and closed.  This is no longer the case although you may still see a self-closing tag &lt;code&gt;&amp;lt;tag /&amp;gt;&lt;/code&gt; in code examples.  &lt;/p&gt;
&lt;h2 id=&quot;attributes&quot;&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Sometimes a tag will need additional information to perform correctly.  Adding an attribute to the tag allows the developer to set the correct information on each tag.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Attributes will always go on the opening tag after the tag name.  There must be space between the tag name and the attribute name.&lt;/li&gt;
&lt;li&gt;Attributes do not need to be closed.  In other words when you close a tag you close its entire attribute.  &lt;/li&gt;
&lt;li&gt;If an attribute has a value the value must be quoted and you should use the double quote “&lt;/li&gt;
&lt;li&gt;If an attribute has a value there must be an equal sign = between the attribute name and the value.&lt;/li&gt;
&lt;li&gt;The order of the attribute does not matter.&lt;/li&gt;
&lt;li&gt;The number of attributes that are used has decreased with newer versions of HTML.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;one-attribute&quot;&gt;One Attribute&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;tag attribute=&amp;quot;value&amp;quot;&amp;gt;content&amp;lt;/tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;two-attributes&quot;&gt;Two Attributes&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;tag attribute=&amp;quot;value&amp;quot; attribute=&amp;quot;value&amp;quot;&amp;gt;content&amp;lt;/tag&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;block-level-vs-inline&quot;&gt;Block-level vs inline&lt;/h2&gt;
&lt;p&gt;Most all tags fall in to one of two types of tags, inline or block.  Understanding how an element displays will help you choose the correct tag to use.  &lt;/p&gt;
&lt;p&gt;Block-level elements will&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fill the full width of the parent element&lt;/li&gt;
&lt;li&gt;Force the content to its own line&lt;/li&gt;
&lt;li&gt;Allows for padding and margin to be set on the top and bottom.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Inline will&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only take up the space of the content&lt;/li&gt;
&lt;li&gt;Wont force the content two its own line i.e. stay “inline”&lt;/li&gt;
&lt;li&gt;Can’t have padding on the top and bottom&lt;/li&gt;
&lt;li&gt;Can’t have a width or height set
Examples
&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The block examples are structural elements, while the inline elements are text-based. This is an easy way to remember which is which.&lt;/p&gt;
&lt;p&gt;Generally speaking, you can put any block element inside another block element. You can also put any inline element inside a block element, as well as any inline element inside any other inline element. But you cannot put a block element inside an inline element. The paragraph tags also must be the inner most block element or in other words you cannot have a paragraph tag nested in a paragraph tag.&lt;/p&gt;
&lt;h2 id=&quot;nesting-elements&quot;&gt;Nesting Elements&lt;/h2&gt;
&lt;p&gt;If we think about html as the building blocks of a webpage we will have to nest elements within in each other to build the page correctly.  &lt;/p&gt;
&lt;p&gt;Think about it this way.  If we were to build a house we might start to build the ground floor.  We might add a kitchen, bathroom and living room all with in the ground floor.  We would not finish the floor until all the rooms are done.  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;House
    Floor
        Kitchen
        Bathroom
        Living room
    Floor
        Bed Room
        Bed Room
        Bathroom
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If this was HTML it might look something like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;house&amp;gt;
    &amp;lt;floor&amp;gt;
        &amp;lt;kitchen&amp;gt;&amp;lt;/kitchen&amp;gt;
        &amp;lt;bathroom&amp;gt;&amp;lt;/bathroom&amp;gt;
        &amp;lt;living&amp;gt;&amp;lt;/living&amp;gt;
    &amp;lt;/floor&amp;gt;
    &amp;lt;floor&amp;gt;
        &amp;lt;bed&amp;gt;&amp;lt;/bed&amp;gt;
        &amp;lt;bed&amp;gt;&amp;lt;/bed&amp;gt;
        &amp;lt;bathroom&amp;gt;&amp;lt;/bathroom&amp;gt;
    &amp;lt;/floor&amp;gt;
&amp;lt;/house&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can see we open the house tag but do not close it until both floors are done.  &lt;/p&gt;
&lt;p&gt;First in, last out. The first tag you open is the last tag you close.  &lt;/p&gt;
</description>
    </item>
    <item>
      <title>Lesson 2</title>
      <link>http://localhost:8080/lessons/lesson-2/</link>
      <pubDate>Wed, 10 Jun 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-2/</guid>
      <author></author>
      <description>&lt;p&gt;This week we will talk about how to create links and embed images. &lt;div&gt;&lt;span class=&quot;label label-default html&quot;&gt;&lt;i class=&quot;fa fa-html5&quot;&gt;&lt;/i&gt;HTML&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;anchor-tag-inline-element-&quot;&gt;Anchor Tag (inline element)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-2/&quot;&gt;Link Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-2/folders.html&quot;&gt;Folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-2/images.html&quot;&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-2/image-types.html&quot;&gt;Image Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-2/homework.html&quot;&gt;Homework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;/lessons/lesson-2/week2-notes.zip&quot;&gt;Download Notes &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;/lessons/lesson-2/week2.zip&quot;&gt;Download Stater File &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The anchor tag or the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag is most commonly used to create a link to an other file or page.  The anchor tag by default will not act as a link without the &lt;code&gt;href&lt;/code&gt; attribute.  &lt;/p&gt;
&lt;p&gt;The anchor tag can also be used to set a point on a page where the page can be linked to.  You might see this on an FAQ page where you have a list of questions at the top and the answers at the bottom. &lt;/p&gt;
&lt;p&gt;Please note there is not a link tag.  If someone askes you to create a link they are talking about the anchor tag. &lt;/p&gt;
&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=”http://www.sva.edu”&amp;gt;http://www.sva.edu&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a name=&amp;quot;pointname&amp;quot;&amp;gt;Page Content&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Attributes&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;href=&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;URL&lt;/td&gt;
&lt;td&gt;The target URL of the link&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;target&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;_blank&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Where to open the target URL. &lt;code&gt;_blank&lt;/code&gt; - the target URL will open in a new window&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&quot;parts-of-a-link&quot;&gt;Parts of a link&lt;/h2&gt;
&lt;p&gt;There are two parts to create a link&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The text or content the user can click on&lt;/li&gt;
&lt;li&gt;The location of the page the user will have the page replace.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;location/of/file.html&amp;quot;&amp;gt;Clickable text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;breaking-it-down&quot;&gt;Breaking it down&lt;/h4&gt;
&lt;p&gt;Lets start with the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; which is added to create the anchor.  Next we need to add the &lt;code&gt;href&lt;/code&gt; &lt;strong&gt;attribute&lt;/strong&gt; to make the anchor act as a &lt;em&gt;link&lt;/em&gt;. Then we wrap the text we want the user to click on with the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;. Last we add the location of the page we want to link to. &lt;/p&gt;
&lt;p&gt;If we had the text &lt;strong&gt;HTML at SVA&lt;/strong&gt; and wanted to link to the web page &lt;em&gt;&lt;a href=&quot;http://www.svahtml.com&quot;&gt;http://www.svahtml.com&lt;/a&gt;&lt;/em&gt; the link would look like this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;http://www.svahtml.com&amp;quot;&amp;gt;HTML at SVA&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind that the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; is an inline element so it can be placed next to other text. &lt;/p&gt;
&lt;p&gt;If you want a link to be on its own line it would need to wrapped with a Block-Level element like a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;linking-to-a-file-in-the-same-folder&quot;&gt;Linking to a file in the same folder&lt;/h2&gt;
&lt;p&gt;When you link to a file that is in the same folder just add the file name to the HREF attribute.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;filename.html&amp;quot;&amp;gt;Link Text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;linking-to-a-file-in-a-sub-folder&quot;&gt;Linking to a file in a sub folder&lt;/h2&gt;
&lt;p&gt;When linking to a file in a sub folder you need to declare what folder you are navigating to then add the file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;folder/filename.html&amp;quot;&amp;gt;Link Text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;linking-to-a-file-in-a-parent-folder&quot;&gt;Linking to a file in a parent folder&lt;/h2&gt;
&lt;p&gt;When linking a file in a parent folder you need to add &lt;code&gt;&amp;quot;../&amp;quot;&lt;/code&gt; for each folder you want to navigate up.  You do not need the folder name when navigating up.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;../filename.html&amp;quot;&amp;gt;Link Text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;linking-to-an-outside-site&quot;&gt;Linking to an outside site&lt;/h2&gt;
&lt;p&gt;When linking to an outside site you need to add the full URL including the &lt;code&gt;http://&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;http://www.svahtml.com&amp;quot;&amp;gt;Link Text&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;linking-to-a-point-with-a-page-&quot;&gt;Linking to a point with a page.&lt;/h2&gt;
&lt;p&gt;The link add the “#” that says look on the page for a A tag with a name that matches the text after the #.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;#sectionName&amp;quot;&amp;gt;Link to section&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The point on the page you are linking to.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a name=&amp;quot;sectionName&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;images-as-a-link&quot;&gt;Images as a link&lt;/h2&gt;
&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=”http://www.cnn.com”&amp;gt;&amp;lt;img src=”/images/cnnlogo.png” alt=”link to cnn” border=”0”/&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;adding-target&quot;&gt;Adding Target&lt;/h2&gt;
&lt;p&gt;There will be time what you want open a page in a new window. By adding the `target=”_blank” attribute it will force that page to open in a new window or tab.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; How the page open can not be controlled it is a setting of the browser.  In most cases it will open in a new tab.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://css-tricks.com/use-target_blank/&quot;&gt;Read More&lt;/a&gt; about when you should use &lt;code&gt;target&lt;/code&gt;&lt;/p&gt;
&lt;style&gt;
table tr td:nth-child(1){width:20%}
&lt;/style&gt;</description>
    </item>
    <item>
      <title>Lesson 3</title>
      <link>http://localhost:8080/lessons/lesson-3/</link>
      <pubDate>Wed, 17 Jun 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-3/</guid>
      <author></author>
      <description>&lt;p&gt;This week we start to talk about CSS. &lt;div&gt;&lt;span class=&quot;label label-default html&quot;&gt;&lt;i class=&quot;fa fa-html5&quot;&gt;&lt;/i&gt;HTML&lt;/span&gt; &lt;span class=&quot;label label-default css&quot;&gt;&lt;i class=&quot;fa fa-css3&quot;&gt;&lt;/i&gt;css&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;lesson-3-css&quot;&gt;Lesson 3 - CSS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-3/&quot;&gt;Intro to CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-3/selectors.html&quot;&gt;Selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-3/include.html&quot;&gt;Include File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-3/css.html&quot;&gt;CSS2 Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-3/homework.html&quot;&gt;Homework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;/lessons/lesson-3/week3-notes.zip&quot;&gt;Download Notes &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;/lessons/lesson-3/week3.zip&quot;&gt;Download Stater File &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1mYirjj8tdvtriYiZJl5F97xVhJFnOiWnf0cp1JKqO9M/edit?pli=1#slide=id.p&quot; target=&quot;_blank&quot; class=&quot;btn&quot;&gt;View Presentation&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-is-css&quot;&gt;What is CSS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CSS stands for &lt;em&gt;Cascading Style Sheets&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Styles define how to display HTML elements&lt;/li&gt;
&lt;li&gt;Styles are normally stored in Style Sheets&lt;/li&gt;
&lt;li&gt;External Style Sheets can save you a lot of work&lt;/li&gt;
&lt;li&gt;External Style Sheets are stored in CSS files&lt;/li&gt;
&lt;li&gt;Multiple style definitions will cascade into one&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;locations-of-styles&quot;&gt;Locations of Styles&lt;/h2&gt;
&lt;p&gt;Styles can be written in 3 different location.  Where they style is defined will impact how an element will be displayed. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;External file include within the HTML file&lt;/li&gt;
&lt;li&gt;Embedded or Internal style sheet local to HTML file&lt;/li&gt;
&lt;li&gt;Inline style that is added directly to an HTML element&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;weight-of-locations&quot;&gt;Weight of locations&lt;/h2&gt;
&lt;p&gt;The location impacts the presentation of the HTML element. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Default browser setting&lt;/li&gt;
&lt;li&gt;External style sheet.  Last one included on the page has most weight&lt;/li&gt;
&lt;li&gt;Embedded on the page - Last style defended will be displayed.&lt;/li&gt;
&lt;li&gt;Inline Style&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the case where two elements have the same style applied the more specific the style the more weight it has.  An inline style has the most weight because it is applied directly to an element. In internal style sheet has more weight than an external because it applied only to that on page. &lt;/p&gt;
&lt;p&gt;The efficiency of a style often time is the opposed of how specific it is.  This is because you often want to reuse a style across may elements or page with in your site.&lt;/p&gt;
&lt;h2 id=&quot;selectors&quot;&gt;Selectors&lt;/h2&gt;
&lt;p&gt;In CSS, selectors are used to declare which of the markup elements a style applies to, a kind of match expression.  In other words it is the instruction to the CSS on what HTML elements should be styled but not how they should be styled.  &lt;/p&gt;
&lt;p&gt;There are 3 basic selectors each has its own weight that defines how an element will look when there are conflicting styles.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Tag Name Selector&lt;/li&gt;
&lt;li&gt;Class Name Selector &lt;/li&gt;
&lt;li&gt;ID Name Selector&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;tag-name-selector&quot;&gt;Tag Name Selector&lt;/h2&gt;
&lt;p&gt;Because HTML has a standard set of tags use CSS can use there names to connect the HTML and CSS.  A tag name selector will apply the style to all elements on a page that match that tag name.  &lt;/p&gt;
&lt;p&gt;For example if a html page use the paragraph tag CSS can style all P tags on the page to look the same way.  This is very efficient to style a large number of elements at one time.  Because the HTML tag is the reference there is no need to add any addiction mark up. &lt;/p&gt;
&lt;h2 id=&quot;class-name-selectors&quot;&gt;Class Name Selectors&lt;/h2&gt;
&lt;p&gt;Often times a style will need to be applied to one or more elements on a page but not all elements.  To allow of a style to be applied to one more more elements on a page a class is created and added to the HTML element.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A class selectors must have a name given to it. &lt;/li&gt;
&lt;li&gt;A class name can be applied to one or more elements with in a document.  &lt;/li&gt;
&lt;li&gt;A class attribute must be added to an HTML element.  &lt;code&gt;class=”className”&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Class names are case sensitive&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;id-name-selectors&quot;&gt;ID Name Selectors&lt;/h2&gt;
&lt;p&gt;Like the class selectors ID selector are applied to an element within the document but unlike a class an ID name can only be used once.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An ID selector must have a name given to it.&lt;/li&gt;
&lt;li&gt;An ID name can be used only once per document.&lt;/li&gt;
&lt;li&gt;An ID attribute must be added to an HTML element &lt;code&gt;id=”idName”&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ID names are case sensitive&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;weight-of-selectors&quot;&gt;Weight of selectors&lt;/h2&gt;
&lt;p&gt;The more specific a selector is the more weight it has.  An ID has the the most weight because it is used on a page only once.  A class has more weight than a tag selector because it defines what elements it is applied to.&lt;/p&gt;
&lt;p&gt;Any time you put effort in to connecting the HTML and the CSS it will have more weight than if you do nothing to the HTML. &lt;/p&gt;
&lt;h3 id=&quot;order-of-weight&quot;&gt;Order of weight&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ID Name &lt;/li&gt;
&lt;li&gt;Class Name&lt;/li&gt;
&lt;li&gt;Tag Name&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;inline-styles&quot;&gt;Inline Styles&lt;/h3&gt;
&lt;p&gt;Inline style are effect way of applying a style to one element.  The down side is that it is not reusable.  If you where apply that style a second time you would need to create that style a second time.  &lt;/p&gt;
&lt;h3 id=&quot;how-to-use&quot;&gt;How to use&lt;/h3&gt;
&lt;p&gt;Inline styles are applied to an HTML element with an attribute of style.  The attribute is HTML but the value is CSS. &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;h1 style=”property:value;”&amp;gt;HTML Text&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;internal-and-external-styles&quot;&gt;Internal and External Styles&lt;/h2&gt;
&lt;p&gt;The more common way to use CSS is to add the style to an external file or internal style block.  This creates a clear separation between the HTML and the CSS.  If the CSS is written in an external file that file can used on many pages with in your site and if a change needs to be made it is made in once place an applied to all pages at the same time.  &lt;/p&gt;
&lt;h3 id=&quot;how-to-use&quot;&gt;How to use&lt;/h3&gt;
&lt;h4 id=&quot;html&quot;&gt;HTML&lt;/h4&gt;
&lt;p&gt;On each element that a class is applied you need to add the class attribute with a value of the class name.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; that class name can be anything you want it it be.  The example below use a generic className but it could be almost anything.  The same thing goes for the ID name.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;h1 class=”className”&amp;gt;HTML Text&amp;lt;/h1&amp;gt;
&amp;lt;p class=”className”&amp;gt;HTML Text&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;or &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div id=”idName”&amp;gt;
    &amp;lt;p&amp;gt;HTML Text&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;css-internal-style-sheet&quot;&gt;CSS - internal style sheet&lt;/h4&gt;
&lt;p&gt;The style block will be added with the HEAD tag.  Adding a style tag.&lt;/p&gt;
&lt;p&gt;To define a class use the class name defined in the HTML and add a period (.) in front of it. .className&lt;/p&gt;
&lt;p&gt;To define an id use the id name defined in the HTML and add a number symbol (#) in front of it. #idName&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style type=”text/css”&amp;gt;

.className {
    property: value;
}

#idName {
    property: value;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;css-syntax&quot;&gt;CSS Syntax&lt;/h2&gt;
&lt;p&gt;The syntax for css is very different than HTML syntax.  &lt;/p&gt;
&lt;h3 id=&quot;basic-format&quot;&gt;Basic format&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Declaration - The whole style including the selector and properties and values.&lt;/li&gt;
&lt;li&gt;Selector - How the HTML and CSS are connected&lt;/li&gt;
&lt;li&gt;Property - predefined options used to change the look and feel of an element.&lt;/li&gt;
&lt;li&gt;Value - predefined value based on selected property.&lt;/li&gt;
&lt;li&gt;Colon &lt;code&gt;:&lt;/code&gt; - indicates the end of the property.&lt;/li&gt;
&lt;li&gt;Semicolon &lt;code&gt;;&lt;/code&gt; - indicates the end of a value.  Semicolons are required.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Inline style - when using an inline style you will only use the property and value.&lt;/p&gt;
&lt;h3 id=&quot;basic-format&quot;&gt;Basic format&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;selector {
    property: value;    
} 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;More than one property - declarations can have many properties defined&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;selector {
    property1: value;
    property2: value2;
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Lesson 4</title>
      <link>http://localhost:8080/lessons/lesson-4/</link>
      <pubDate>Wed, 24 Jun 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-4/</guid>
      <author></author>
      <description>&lt;p&gt;This week We will dive back into CSS and talk about test, font, borders, margin and padding. &lt;div&gt;&lt;span class=&quot;label label-default css&quot;&gt;&lt;i class=&quot;fa fa-css3&quot;&gt;&lt;/i&gt;css&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;basic-style-properties&quot;&gt;Basic Style Properties&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-4/&quot;&gt;Font Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-4/text.html&quot;&gt;Text Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-4/borders.html&quot;&gt;Borders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-4/padding-margin.html&quot;&gt;Padding and Margin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-4/homework.html&quot;&gt;Homework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;/lessons/lesson-4/week4-notes.zip&quot;&gt;Download Notes &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;a href=&quot;/lessons/lesson-4/week4.zip&quot;&gt;Download Starter Files &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When styling fonts with CSS they are broken into two types.  &lt;strong&gt;Font&lt;/strong&gt; properties and &lt;strong&gt;Text&lt;/strong&gt; properties. The two are very similar, the &lt;strong&gt;Font&lt;/strong&gt; deals more with the character set and the &lt;strong&gt;Text&lt;/strong&gt; is more about changing the way the font looks.&lt;/p&gt;
&lt;h2 id=&quot;font-properties&quot;&gt;Font Properties&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Values&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;font:* &lt;br&gt;required&lt;/td&gt;
&lt;td&gt;style variant weight size/line-height family&lt;br&gt; example: &lt;code&gt;font:bold 12px/2 verdana, &amp;quot;Lithos Regular&amp;quot;, sans-serif;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-style:&lt;/td&gt;
&lt;td&gt;normal, italic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-variant:&lt;/td&gt;
&lt;td&gt;normal, small-caps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-weight:&lt;/td&gt;
&lt;td&gt;normal, bold&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-size:*&lt;/td&gt;
&lt;td&gt;length, percent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;line-height:&lt;/td&gt;
&lt;td&gt;normal, length, percent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-family:*&lt;/td&gt;
&lt;td&gt;Arial ,”Arial Black”, “Courier New”, Impact, “Lucida Sans Unicode”, Tahoma, Verdana&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;*required&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When styling fonts with CSS they are broken into two types.  &lt;strong&gt;Font&lt;/strong&gt; properties and &lt;strong&gt;Text&lt;/strong&gt; properties. The two are very similar, the &lt;strong&gt;Font&lt;/strong&gt; deals more with the character set and the &lt;strong&gt;Text&lt;/strong&gt; is more about changing the way the font looks.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;font&lt;/code&gt; - is a shorthand way to express any font propertiesx on one line.  When using the shorthand the order matters.  There are two required properties, font-size and font-family.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;font: italic small-caps bold 12px arial, verdana;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you do not define a property within the shorthand it will be set to the default state often normal. It could be the case that in the case of &lt;code&gt;h1&lt;/code&gt; where the default is for the text to be bold that when using the shorthand and not setting the &lt;code&gt;font-weight&lt;/code&gt; it will be sent to &lt;code&gt;normal&lt;/code&gt; and the &lt;code&gt;h1&lt;/code&gt; will no longer be bold even though we did not set it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;font-style&lt;/code&gt; will define if something will be italic.  If something is italic by default like the &lt;code&gt;em&lt;/code&gt; you can also set the &lt;code&gt;font-style&lt;/code&gt; to be &lt;code&gt;normal&lt;/code&gt; and it will remove the italics.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;font-style: italic;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;code&gt;font-variant&lt;/code&gt; will set the text to be &lt;code&gt;small-caps&lt;/code&gt; where the “lowercase” letters will be displayed as small uppercase letters.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;font-variant: small-caps;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;code&gt;font-weight&lt;/code&gt;will define text that is bold.  If something is bold by default like &lt;code&gt;h2&lt;/code&gt; you can remove the bold by setting the value to &lt;code&gt;normal&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;font-weight: bold;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;&lt;code&gt;font-size&lt;/code&gt; - set the size of the font.&lt;/p&gt;
&lt;p&gt;While there are a number of options to define what the size can be we use only three options.  We will use &lt;strong&gt;percent&lt;/strong&gt;, &lt;strong&gt;em&lt;/strong&gt;, or &lt;strong&gt;pixel&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Both percent and em calculate the size of the font off of another font size. For example if a font size set to &lt;code&gt;10px&lt;/code&gt; and wanted to have the text be &lt;strong&gt;twice as large&lt;/strong&gt; you could set the size to be &lt;code&gt;2em&lt;/code&gt; or &lt;code&gt;200%&lt;/code&gt;,  This will calculate size to be &lt;code&gt;20px&lt;/code&gt; but if the font size where to change to &lt;code&gt;12px&lt;/code&gt; it would then calculate the size to &lt;code&gt;24px&lt;/code&gt;.  The advantage of this is you only need to &lt;strong&gt;change the one font&lt;/strong&gt; and all the other fonts will change in relation to that size.&lt;/p&gt;
&lt;p&gt;Since we &lt;strong&gt;can’t&lt;/strong&gt; measure what an inch is on a computer screen we can’t use it. That also means that we &lt;strong&gt;can’t&lt;/strong&gt; use point because &lt;code&gt;1 points&lt;/code&gt; is defined as &lt;code&gt;1/72 inch&lt;/code&gt;.  The fact that we do not know what an inch is it we can not calculate what a point is.  Instead you should always define &lt;strong&gt;font sizes in pixels, percent or em&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;font-size: 12px;
font-size: 2em;
font-size: 200%;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;css-units&quot;&gt;CSS Units&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Unit&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;a percentage of something&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in&lt;/td&gt;
&lt;td&gt;*&lt;em&gt;inch&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cm&lt;/td&gt;
&lt;td&gt;*&lt;em&gt;centimeter&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mm&lt;/td&gt;
&lt;td&gt;*&lt;em&gt;millimeter&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;em&lt;/td&gt;
&lt;td&gt;one em is equal to the font size of the current element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pt&lt;/td&gt;
&lt;td&gt;*&lt;em&gt;point (1 pt is the same as 1/72 inch)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pc&lt;/td&gt;
&lt;td&gt;*&lt;em&gt;pica (1 pc is the same as 12 points)&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;px&lt;/td&gt;
&lt;td&gt;pixels (a dot on the computer screen)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;*&lt;em&gt;Should not be used when viewing on a computer screen. Should only be used when printing&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;font-family&lt;/code&gt; - defines what font is displayed when the page is rendered.  The &lt;code&gt;font-family&lt;/code&gt; can only load a font that is installed on the &lt;strong&gt;local computer&lt;/strong&gt; viewing the page.   This means we are limited in the fonts that installed on both the Mac and Windows computers by default.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;font-family: helvetica, arial, “time new roman”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; any font name that has a &lt;em&gt;space&lt;/em&gt; in needs to be quoted(“).&lt;/p&gt;
&lt;p&gt;If you want to use a font that may not be fully supported but have a fall back you can put them in a comma separated list.  If the first item in the list is not available it will try the next font in the list.  If no font is available it will display the browser default.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Serif Fonts&lt;/td&gt;
&lt;td&gt;Georgia, serif&lt;br&gt;“Palatino Linotype”, “Book Antiqua”, Palatino, serif&lt;br&gt;“Times New Roman”, Times, serif&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sans-Serif Fonts&lt;/td&gt;
&lt;td&gt;Arial, Helvetica, sans-serif    &lt;br&gt;“Arial Black”, Gadget, sans-serif&lt;br&gt;“Comic Sans MS”, cursive, sans-serif&lt;br&gt;Impact, Charcoal, sans-serif&lt;br&gt;“Lucida Sans Unicode”, “Lucida Grande”, sans-serif&lt;br&gt;Tahoma, Geneva, sans-serif&lt;br&gt;“Trebuchet MS”, Helvetica, sans-serif&lt;br&gt;Verdana, Geneva, sans-serif&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Monospace Fonts&lt;/td&gt;
&lt;td&gt;“Courier New”, Courier, monospace&lt;br&gt;“Lucida Console”, Monaco, monospace&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;style&gt;
table tr td:nth-child(1){width:20%}
td .label {margin-right: 4px;cursor: pointer;}
&lt;/style&gt;


&lt;script src=&quot;lesson5.js&quot;&gt;&lt;/script&gt;
</description>
    </item>
    <item>
      <title>Lesson 5</title>
      <link>http://localhost:8080/lessons/lesson-5/</link>
      <pubDate>Wed, 01 Jul 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-5/</guid>
      <author></author>
      <description>&lt;p&gt;This week we will talk about Table and all the good and bad that goes with it. &lt;div&gt;&lt;span class=&quot;label label-default html&quot;&gt;&lt;i class=&quot;fa fa-html5&quot;&gt;&lt;/i&gt;HTML&lt;/span&gt; &lt;span class=&quot;label label-default css&quot;&gt;&lt;i class=&quot;fa fa-css3&quot;&gt;&lt;/i&gt;css&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;tables&quot;&gt;Tables&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-5/&quot;&gt;Intro to Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/lessons/lesson-5/table-example/index.html&quot;&gt;Build a table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-5/styles.html&quot;&gt;Adding Styles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-5/homework.html&quot;&gt;Homework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;/lessons/lesson-5/week5-notes.zip&quot;&gt;Download Notes &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;a href=&quot;/lessons/lesson-5/week5.zip&quot;&gt;Download Starter Files &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tables are defined with the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tag. A table is divided into rows (with the &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; tag), and each row is divided into data cells (with the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tag). The letters td stands for &lt;strong&gt;“table data,”&lt;/strong&gt; which is the content of a data cell. A data cell can contain text, images, lists, paragraphs, forms, tables, etc. There is also the &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; or table header to define a header within the table.  &lt;strong&gt;HTML5&lt;/strong&gt; added two new tags to help better group content within the table.  The &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; or table header and &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; or table body are &lt;strong&gt;optional&lt;/strong&gt; tags that can be used to help define areas of the table.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;row 1, cell 1&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;row 1, cell 2&amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;row 2, cell 1&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;row 2, cell 2&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;table class=&quot;no-style&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;row 1, cell 1&lt;/th&gt;
            &lt;th&gt;row 1, cell 2&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;row 2, cell 1&lt;/td&gt;
            &lt;td&gt;row 2, cell 2&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;table-tag&quot;&gt;Table Tag&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;table&amp;gt;&amp;lt;/table&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;table&lt;/strong&gt; tag defines the starting and stopping points of the table. After the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; all content that is to be displayed on the screen must be placed between &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/td&amp;gt;&lt;/code&gt;. Once a &lt;code&gt;&amp;lt;/table&amp;gt;&lt;/code&gt; is indicated all html goes on as normal.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;!-- add table content --&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;table-row&quot;&gt;Table Row&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&amp;lt;/tr&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table Row&lt;/strong&gt; defines the starting and stopping points for a table row. All table data cells must be placed between the &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/tr&amp;gt;&lt;/code&gt;. Because a table might have more than one row you can have more than one &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; set.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;!-- add table content --&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;table-data&quot;&gt;Table Data&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;table data&lt;/strong&gt; Defines a cell with a table and must be between &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/tr&amp;gt;&lt;/code&gt;. Because all content must be located in the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; set you can have more than on &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; set per row.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;!-- add table content --&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;table-header&quot;&gt;Table Header&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;table header&lt;/strong&gt; Just like the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; but defines a &lt;strong&gt;header&lt;/strong&gt;. The table header is always &lt;em&gt;bold and center&lt;/em&gt; although this can be overwritten with CSS.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;&amp;lt;!-- add table content --&amp;gt;&amp;lt;/tg&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;table-head&quot;&gt;Table Head&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;thead&amp;gt;&amp;lt;/thead&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;table head&lt;/strong&gt; Defines an &lt;em&gt;optional&lt;/em&gt; area within the table as the header of that table. &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; is descendant of the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;&amp;lt;!-- add table content --&amp;gt;&amp;lt;/tg&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/head&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;table-body&quot;&gt;Table Body&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;table body&lt;/strong&gt; Defines an &lt;em&gt;optional&lt;/em&gt; area within the table as the body of that table. &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; is descendant of the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;!-- add table content --&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;
&lt;p&gt;Normal table with header&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;Heading&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;Another Heading&amp;lt;/th&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;row 1, cell 1&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;row 1, cell 2&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;row 2, cell 1&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;row 2, cell 2&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;table border=&quot;1&quot; class=&quot;no-style&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Heading&lt;/th&gt;
            &lt;th&gt;Another Heading&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;row 1, cell 1&lt;/td&gt;
            &lt;td&gt;row 1, cell 2&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;row 2, cell 1&lt;/td&gt;
            &lt;td&gt;row 2, cell 2&lt;/td&gt;
        &lt;/tr&gt;
    &lt;tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;row-span-and-col-span&quot;&gt;Row Span and Col Span&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;colspan&lt;/code&gt; attribute is a way to make on &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; take up the space of two or more columns.  This is very useful when you have a title or other content that need to span over two or more columns.&lt;/p&gt;
&lt;h3 id=&quot;table-with-colspan&quot;&gt;Table with colspan&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;
&amp;lt;tr&amp;gt;
    &amp;lt;td colspan=&amp;quot;2&amp;quot;&amp;gt;row 1, cell 1&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;row 2, cell 1&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;row 2, cell 2&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;table border=&quot;1&quot; class=&quot;no-style&quot;&gt;
&lt;tr&gt;
    &lt;td colspan=&quot;2&quot;&gt;row 1, cell 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;row 2, cell 1&lt;/td&gt;
    &lt;td&gt;row 2, cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The &lt;code&gt;rowspan&lt;/code&gt; attribute is like the &lt;code&gt;colspan&lt;/code&gt; but the cell will span from one row to the next.&lt;/p&gt;
&lt;h3 id=&quot;table-with-rowspan&quot;&gt;Table with rowspan&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;
&amp;lt;tr&amp;gt;
    &amp;lt;td rowspan=&amp;quot;2&amp;quot;&amp;gt;row 1, cell 1&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;row 1, cell 2&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;row 2, cell 2&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;table border=&quot;1&quot; class=&quot;no-style&quot;&gt;
&lt;tr&gt;
    &lt;td rowspan=&quot;2&quot;&gt;row 1, cell 1&lt;/td&gt;
    &lt;td&gt;row 1, cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;row 2, cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; that you would never put a colspan or rowspan on the last td in the row or column.&lt;/p&gt;
&lt;h2 id=&quot;nested-tables&quot;&gt;Nested Tables&lt;/h2&gt;
&lt;p&gt;A nested is one table that is coded within another table.   All HTML elements in a table must be coded within the &lt;td&gt; tag.  Almost all HTML elements can be code in a table including another table.&lt;/p&gt;
&lt;p&gt;When nesting a table within another table be aware that you will now have a &lt;code&gt;&amp;lt;table&amp;gt;&amp;lt;/table&amp;gt;&lt;/code&gt; for each table.  So if you have two tables (one inside the other) you will need to have two sets of table tags.&lt;/p&gt;
&lt;h4 id=&quot;adding-a-comment-&quot;&gt;Adding a comment &lt;!-- --&gt;&lt;/h4&gt;
&lt;p&gt;One way to help organized and limit the number of errors is to add a HTML comment.  A comment is a snippet of code that is ignored by the browser.  It used to leave a note in the code.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- comment here --&amp;gt;  (replace comment here with your note)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Anything between the two tags will not seen on the screen.&lt;/p&gt;
&lt;p&gt;Adding comments before and after a nested table helps keep the two table straight and can limit the number of errors.&lt;/p&gt;
&lt;h3 id=&quot;setting-up-a-nested-table&quot;&gt;Setting up a nested table&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;
            This cell contains a nested table.
            &amp;lt;!-- start nested table --&amp;gt;
            &amp;lt;table&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;Nested table&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Nested table&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;Nested table&amp;lt;/td&amp;gt;
                &amp;lt;td&amp;gt;Nested table&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
            &amp;lt;/table&amp;gt;
            &amp;lt;!-- end nested table --&amp;gt;
        &amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;No Nested table here.&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;table class=&quot;no-style&quot;&gt;
&lt;tr&gt;
    &lt;td&gt;
        This cell contains a nested table.
        &lt;!-- start nested table --&gt;
        &lt;table&gt;
        &lt;tr&gt;
            &lt;td&gt;Nested table&lt;/td&gt;
            &lt;td&gt;Nested table&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Nested table&lt;/td&gt;
            &lt;td&gt;Nested table&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;!-- end nested table --&gt;
    &lt;/td&gt;
    &lt;td&gt;No Nested table here.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    <item>
      <title>Lesson 6</title>
      <link>http://localhost:8080/lessons/lesson-6/</link>
      <pubDate>Wed, 08 Jul 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-6/</guid>
      <author></author>
      <description>&lt;p&gt;This week we will be talking about floating.  How to align images, build gallery and simple navigation. &lt;div&gt;&lt;span class=&quot;label label-default css&quot;&gt;&lt;i class=&quot;fa fa-css3&quot;&gt;&lt;/i&gt;css&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;css-box-model&quot;&gt;CSS Box Model&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-6/&quot;&gt;Box Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-6/pseudo.html&quot;&gt;Pseudo Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-6/floats.html&quot;&gt;Floats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-6/clear-fix.html&quot;&gt;Clear Fix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-6/homework.html&quot;&gt;Homework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;/lessons/lesson-6/week6-notes.zip&quot;&gt;Download Notes &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;a href=&quot;/lessons/lesson-6/week6.zip&quot;&gt;Download Starter Files &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since Everything on in web design is a rectangular box we need to know how to size that box.  The way that CSS calculates the size of a box is not what you expect.  Rather than set the size of the box based on the outter most elements &lt;code&gt;border&lt;/code&gt; or &lt;code&gt;padding&lt;/code&gt; the widht is set baed on the content.&lt;/p&gt;
&lt;h3 id=&quot;setting-a-width&quot;&gt;Setting a width&lt;/h3&gt;
&lt;p&gt;To set the width of an element you take the desired width and subtract the &lt;code&gt;padding-left&lt;/code&gt;, &lt;code&gt;padding-right&lt;/code&gt;, &lt;code&gt;border-left-width&lt;/code&gt; and &lt;code&gt;border-right-width&lt;/code&gt;.  If you need to maintain the &lt;code&gt;margin&lt;/code&gt; you will need to subtract the &lt;code&gt;margin-left&lt;/code&gt; and &lt;code&gt;margin-right&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;p&gt;If we have an element that needs to fit in to a space that is &lt;code&gt;400px&lt;/code&gt; and it has &lt;code&gt;padding: 20px&lt;/code&gt; and &lt;code&gt;border: 5px solid black&lt;/code&gt; the calulation to find the size would look like this.&lt;/p&gt;
&lt;p&gt;  400px - 20px -20px - 5px - 5px = 350px&lt;/p&gt;
&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;button id=&quot;fixWidth&quot; class=&quot;btn&quot; style=&quot;float: right;&quot;&gt;Fix Width&lt;/button&gt;

&lt;ul id=&quot;cntrBoxModel&quot; class=&quot;btn-group&quot;&gt;
  &lt;li class=&quot;btn&quot; data-total=&quot;400&quot; id=&quot;total&quot;&gt;width: 400px;&lt;/li&gt;
  &lt;li class=&quot;btn&quot; data-size=&quot;20&quot;&gt;padding: 20px;&lt;/li&gt;
  &lt;li class=&quot;btn&quot; data-size=&quot;10&quot;&gt;border: 10px solid #1abc9c;&lt;/li&gt;
  &lt;li class=&quot;btn&quot; data-size=&quot;30&quot;&gt;margin: 30px;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;displayBoxModel&quot; class=&quot;box-container&quot;&gt;
  &lt;div class=&quot;box-model&quot;&gt;
    Box Model Element.
  &lt;/div&gt;
&lt;/div&gt;

&lt;script src=&quot;lesson-6.js&quot;&gt;&lt;/script&gt;
</description>
    </item>
    <item>
      <title>Lesson 7</title>
      <link>http://localhost:8080/lessons/lesson-7/</link>
      <pubDate>Wed, 15 Jul 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-7/</guid>
      <author></author>
      <description>&lt;p&gt;This week we will be talking about CSS Layouts.  How to build them without tables. &lt;div&gt;&lt;span class=&quot;label label-default css&quot;&gt;&lt;i class=&quot;fa fa-css3&quot;&gt;&lt;/i&gt;css&lt;/span&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;basic-layouts&quot;&gt;Basic Layouts&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-7/&quot;&gt;Basic Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-7/overflow.html&quot;&gt;Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-7/responsive.html&quot;&gt;Responsive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;/lessons/lesson-7/week7-notes.zip&quot;&gt;Download Notes  &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;a href=&quot;/lessons/lesson-7/week7.zip&quot;&gt;Download Starter File  &lt;i class=&quot;icon-download-alt icon-white&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSS layouts have changed the way that we are able to design websites. At one time all layouts were done with the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;. This was both slow and hard to manage.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Table free&lt;/em&gt; layouts have been used for almost a decade now while they are an improvement over the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; they have flaws.&lt;/p&gt;
&lt;h2 id=&quot;structure&quot;&gt;Structure&lt;/h2&gt;
&lt;p&gt;In this example we are looking the the most basic layout. Assume that this page is a standard content page that has a &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;navigation&lt;/code&gt;, &lt;code&gt;content&lt;/code&gt; area and &lt;code&gt;footer&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;
&amp;lt;nav&amp;gt;&amp;lt;/nav&amp;gt;
&amp;lt;article&amp;gt;&amp;lt;/article&amp;gt;
&amp;lt;footer&amp;gt;&amp;lt;/footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The issue now is that we have no way to limit the width of the elements. One option would be with set the width on each element there are some issue that come along with that. The box model kicks in when a width is set.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;add-wrapper&quot;&gt;Add Wrapper&lt;/h2&gt;
&lt;p&gt;The other option is to wrap all the element with an other element like a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. This will allow you to define a &lt;code&gt;width&lt;/code&gt; on it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
  &amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;
  &amp;lt;nav&amp;gt;&amp;lt;/nav&amp;gt;
  &amp;lt;article&amp;gt;&amp;lt;/article&amp;gt;
  &amp;lt;footer&amp;gt;&amp;lt;/footer&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;adding-class&quot;&gt;Adding class&lt;/h2&gt;
&lt;p&gt;While the structure is correct at this point we want to add an id or class to help identify this &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; from any other &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; that may be on the page.&lt;/p&gt;
&lt;p&gt;There are some who say you should never use an id because they are too specific. I disagree with this. I feel that a well place id can help identify which element you are targeting.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
  &amp;lt;header class=&amp;quot;globalHeader&amp;quot;&amp;gt;&amp;lt;/header&amp;gt;
  &amp;lt;nav class=&amp;quot;globalNav&amp;quot;&amp;gt;&amp;lt;/nav&amp;gt;
  &amp;lt;article class=&amp;quot;contentArea&amp;quot;&amp;gt;&amp;lt;/article&amp;gt;
  &amp;lt;footer class=&amp;quot;gloablFooter&amp;quot;&amp;gt;&amp;lt;/footer&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&quot;styles&quot;&gt;Styles&lt;/h2&gt;
&lt;p&gt;Now that we have the structure in place we need to write the &lt;code&gt;css&lt;/code&gt; to support the markup.&lt;/p&gt;
&lt;h3 id=&quot;fixed-width&quot;&gt;Fixed width&lt;/h3&gt;
&lt;p&gt;In this example we are setting up a page that is a fixed width of &lt;code&gt;800px&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.container {
  width: 800px;
}

.gloablNav, .contentArea {
   float: left;
}

.gloablNav {
  width: 200px;
}

.contentArea {
   width: 600px;
}

.footer {
   clear: both;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will create a fixed two column layout. The width can be adjusted any value just note that the &lt;code&gt;.globalNav&lt;/code&gt; and &lt;code&gt;.contentArea&lt;/code&gt; must add up to the width of the &lt;code&gt;.container&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Lesson 8</title>
      <link>http://localhost:8080/lessons/lesson-8/</link>
      <pubDate>Wed, 22 Jul 2015 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://localhost:8080/lessons/lesson-8/</guid>
      <author></author>
      <description>&lt;p&gt;This week we work on the in class final.  &lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;final-project&quot;&gt;Final Project&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:8080/lessons/lesson-8/&quot;&gt;Final Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More details will come later.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>